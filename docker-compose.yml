services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - VITE_API_URL=http://localhost:3000/api
    networks:
      - url-shortener-network

  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=url_shortener
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=super-secret-jwt-key-for-development-only
      - JWT_EXPIRES_IN=1d
      - URL_DOMAIN=http://localhost:3000
      - GOOGLE_CLIENT_ID=your-google-client-id
      - GOOGLE_CLIENT_SECRET=your-google-client-secret
      - GOOGLE_CALLBACK_URL=http://localhost:3000/api/auth/google/callback
    networks:
      - url-shortener-network

  # PostgreSQL service
  postgres:
    image: postgres:16-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=url_shortener
    networks:
      - url-shortener-network

  # Redis service
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - url-shortener-network

volumes:
  postgres_data:
  redis_data:

networks:
  url-shortener-network:
    driver: bridge
